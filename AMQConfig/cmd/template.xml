
<?xml version="1.0" encoding="UTF-8"?>
<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

  <broker useJmx="false" persistent="false" xmlns="http://activemq.apache.org/schema/core" populateJMSXUserID="true">

    <plugins>
      <!--  use JAAS to authenticate using the login.config file on the classpath to configure JAAS -->
      <jaasAuthenticationPlugin configuration="activemq-domain" />

      <!--  lets configure a destination based authorization mechanism -->
      <authorizationPlugin>
        <map>
          <authorizationMap>
            <authorizationEntries>
            {{- range $i, $queue := .Queues}}
                <authorizationEntry queue="{{$queue}}.>" write="{{$queue}}.producer" read="{{$queue}}.consumer" admin="{{$queue}}., {{$queue}}.consumer"/>
                <authorizationEntry queue="ActiveMQ.Advisory.{{$queue}}.>" write="{{$queue}}.producer" read="{{$queue}}.consumer" admin="{{$queue}}., {{$queue}}.consumer"/>
            {{- end}}

            {{- range $i, $topic := .Topics}}
                <authorizationEntry queue="{{$topic}}.>" write="{{$topic}}.producer" read="{{$topic}}.consumer" admin="{{$topic}}.producer,{{$topic}}.consumer"/>
                <authorizationEntry queue="ActiveMQ.Advisory.{{$topic}}.>" write="{{$topic}}.producer" read="{{$topic}}.consumer" admin="{{$topic}}.producer,{{$topic}}.consumer"/>
            {{- end}}
            </authorizationEntries>
            
            <!-- let's assign roles to temporary destinations. comment this entry if we don't want any roles assigned to temp destinations  -->
            <tempDestinationAuthorizationEntry>  
              <tempDestinationAuthorizationEntry read="tempDestinationAdmins" write="tempDestinationAdmins" admin="tempDestinationAdmins"/>
           </tempDestinationAuthorizationEntry>               
          </authorizationMap>
        </map>
      </authorizationPlugin>
    </plugins>
  </broker>

</beans>
